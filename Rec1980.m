function out = Rec1980(Rec)
%
% ABAQUS modal output to MATLAB
%
% Syntax
%     #Rec# = Fil2str('*.fil');
%     #out# = Rec1980(#Rec#)
%
% Description
%     Read modal output from the results (*.fil) file generated from the
%     ABAQUS finite element software. The asterisk (*) is replaced by the
%     name of the results file. The record key for modal output is 1980 (in
%     ABAQUS/Standard) and is written once per eigenvalue in a natural
%     frequency extraction step. See section < < Results file output format > >
%     in ABAQUS Analysis User's manual for more details.
%     The following options with parameters have to be specified in the
%     ABAQUS input file for the results (*.fil) file to be created and
%     contain frequency analysis results (#n# is the number of requested
%     eigenvalues):
%         ...
%         *FREQUENCY
%         #n#
%         *FILE FORMAT, ASCII
%         ...
%     NOTE: The results file (*.fil) must be placed in the same directory
%     with the MATLAB source files in order to be processed.
%
% Input parameters
%     #Rec# (string) is an one-row string containing the ASCII code of the
%         ABAQUS results (*.fil) file. It is generated by the function
%         Fil2str.m.
%
% Output parameters
%     #out# ([#n# x 16]) is a double array containing the attributes of the
%         record key 1980 as follows:
%         Column  1  –  Eigenvalue number.
%         Column  2  –  Eigenvalue.
%         Column  3  –  Generalized mass.
%         Column  4  –  Composite damping.
%         Column  5  –  Participation factor for degree of freedom 1.
%         Column  6  –  Effective mass for degree of freedom 1.
%         Column  7  –  Participation factor for degree of freedom 2.
%         Column  8  –  Effective mass for degree of freedom 2.
%         Column  9  –  Participation factor for degree of freedom 3.
%         Column 10  –  Effective mass for degree of freedom 3.
%         Column 11  –  Participation factor for degree of freedom 4.
%         Column 12  –  Effective mass for degree of freedom 4.
%         Column 13  –  Participation factor for degree of freedom 5.
%         Column 14  –  Effective mass for degree of freedom 5.
%         Column 15  –  Participation factor for degree of freedom 6.
%         Column 16  –  Effective mass for degree of freedom 6.
%         where #n# is the number of requested eigenvalues in the frequency
%         extraction step. If the results file does not contain the desired
%         output, #out# will be an empty array
%
% _________________________________________________________________________
% Abaqus2Matlab - www.abaqus2matlab.com
% Copyright (c) 2016 by George Papazafeiropoulos
%
% If using this toolbox for research or industrial purposes, please cite:
% G. Papazafeiropoulos, M. Muniz-Calvente, E. Martinez-Paneda.
% Abaqus2Matlab: a suitable tool for finite element post-processing (submitted)
%
%

ind = strfind(Rec,'I 41980'); % record key for modal output (1980)
if isempty(ind)
    out=[];
    return;
end
nextpos=numel('I 41980')+1;
for i=1:numel(ind)
    % check ind
    Rec2=Rec(ind(i)-7:ind(i));
    indNW=strfind(Rec2,'*'); % record starting position
    % ensure that the record exists and that the record type key is at
    % location 2
    if isempty(indNW) || indNW>3
        ind(i)=NaN;
        continue;
    end
end
ind(isnan(ind))=[];
NEigVal=zeros(numel(ind),1);
EigVal=zeros(numel(ind),1);
GenMass=zeros(numel(ind),1);
CompDamp=zeros(numel(ind),1);
PartFdof=zeros(numel(ind),6);
Meffdof=zeros(numel(ind),6);
for i=1:numel(ind)
    % number of digits of eigenvalue number
    ind1=ind(i)+nextpos; % 1st digit of 2-digit integer of 3rd data item
    ind2=ind(i)+nextpos+1; % 2nd digit of 2-digit integer of 3rd data item
    % a1=str2num(Rec(ind1:ind2));
    a1=double(string( Rec(ind1:ind2) )); % read faster
    % Eigenvalue number
    ind1=ind1+2; % +2 digits
    ind2=ind2+a1; % +2-digit integer
    % NEigVal(i)=str2num(Rec(ind1:ind2));
    NEigVal(i)=double(string( Rec(ind1:ind2) )); % read faster
    % Eigenvalue
    ind1=ind1+a1+1; % +2-digit integer+1 character
    ind2=ind2+1+22; % +1 character +22 floating point digits
    % EigVal(i)=str2num(Rec(ind1:ind2));
    EigVal(i)=eval(Rec(ind1:ind2));
%     % Generalized mass
%     ind1=ind1+1+22; % +1 character +22 floating point digits
%     ind2=ind2+1+22; % +1 character +22 floating point digits
%     GenMass(i)=str2num(Rec(ind1:ind2));
%     % Composite damping
%     ind1=ind1+1+22; % +1 character +22 floating point digits
%     ind2=ind2+1+22; % +1 character +22 floating point digits
%     CompDamp(i)=str2num(Rec(ind1:ind2));
%     for j=1:6
%         % Participation factor for degree of freedom j
%         ind1=ind1+1+22; % +1 character +22 floating point digits
%         ind2=ind2+1+22; % +1 character +22 floating point digits
%         PartFdof(i,j)=str2num(Rec(ind1:ind2));
%         % Effective mass for degree of freedom j
%         ind1=ind1+1+22; % +1 character +22 floating point digits
%         ind2=ind2+1+22; % +1 character +22 floating point digits
%         Meffdof(i,j)=str2num(Rec(ind1:ind2));
%     end
end
% Assemply of matrices for output
out=[num2cell(NEigVal) num2cell([EigVal,GenMass,CompDamp,PartFdof,Meffdof])];

end

